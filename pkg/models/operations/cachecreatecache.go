// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/tigris-go-sdk/pkg/models/shared"
	"net/http"
)

type CacheCreateCacheRequest struct {
	CreateCacheRequest shared.CreateCacheRequest `request:"mediaType=application/json"`
	// cache name
	Name string `pathParam:"style=simple,explode=false,name=name"`
	// Tigris project name
	Project string `pathParam:"style=simple,explode=false,name=project"`
}

func (o *CacheCreateCacheRequest) GetCreateCacheRequest() shared.CreateCacheRequest {
	if o == nil {
		return shared.CreateCacheRequest{}
	}
	return o.CreateCacheRequest
}

func (o *CacheCreateCacheRequest) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CacheCreateCacheRequest) GetProject() string {
	if o == nil {
		return ""
	}
	return o.Project
}

type CacheCreateCacheResponse struct {
	ContentType string
	// OK
	CreateCacheResponse *shared.CreateCacheResponse
	// Default error response
	Status      *shared.Status
	StatusCode  int
	RawResponse *http.Response
}

func (o *CacheCreateCacheResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CacheCreateCacheResponse) GetCreateCacheResponse() *shared.CreateCacheResponse {
	if o == nil {
		return nil
	}
	return o.CreateCacheResponse
}

func (o *CacheCreateCacheResponse) GetStatus() *shared.Status {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *CacheCreateCacheResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CacheCreateCacheResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
