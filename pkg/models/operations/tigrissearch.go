// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/tigris-go-sdk/pkg/models/shared"
	"net/http"
)

type TigrisSearchRequest struct {
	SearchRequest shared.SearchRequest `request:"mediaType=application/json"`
	// Collection name to search documents from.
	Collection string `pathParam:"style=simple,explode=false,name=collection"`
	// Project name whose db is under target to search documents from.
	Project string `pathParam:"style=simple,explode=false,name=project"`
}

func (o *TigrisSearchRequest) GetSearchRequest() shared.SearchRequest {
	if o == nil {
		return shared.SearchRequest{}
	}
	return o.SearchRequest
}

func (o *TigrisSearchRequest) GetCollection() string {
	if o == nil {
		return ""
	}
	return o.Collection
}

func (o *TigrisSearchRequest) GetProject() string {
	if o == nil {
		return ""
	}
	return o.Project
}

type TigrisSearchResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Default error response
	Status *shared.Status
	// OK
	StreamingSearchResponse *shared.StreamingSearchResponse
}

func (o *TigrisSearchResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *TigrisSearchResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *TigrisSearchResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *TigrisSearchResponse) GetStatus() *shared.Status {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *TigrisSearchResponse) GetStreamingSearchResponse() *shared.StreamingSearchResponse {
	if o == nil {
		return nil
	}
	return o.StreamingSearchResponse
}
