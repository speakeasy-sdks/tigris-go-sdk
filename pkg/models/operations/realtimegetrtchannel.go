// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/tigris-go-sdk/pkg/models/shared"
	"net/http"
)

type RealtimeGetRTChannelRequest struct {
	Channel string `pathParam:"style=simple,explode=false,name=channel"`
	Project string `pathParam:"style=simple,explode=false,name=project"`
}

func (o *RealtimeGetRTChannelRequest) GetChannel() string {
	if o == nil {
		return ""
	}
	return o.Channel
}

func (o *RealtimeGetRTChannelRequest) GetProject() string {
	if o == nil {
		return ""
	}
	return o.Project
}

type RealtimeGetRTChannelResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// OK
	GetRTChannelResponse *shared.GetRTChannelResponse
	// Default error response
	Status *shared.Status
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *RealtimeGetRTChannelResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *RealtimeGetRTChannelResponse) GetGetRTChannelResponse() *shared.GetRTChannelResponse {
	if o == nil {
		return nil
	}
	return o.GetRTChannelResponse
}

func (o *RealtimeGetRTChannelResponse) GetStatus() *shared.Status {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *RealtimeGetRTChannelResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *RealtimeGetRTChannelResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
