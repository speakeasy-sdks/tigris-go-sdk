// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/tigris-go-sdk/pkg/models/shared"
	"net/http"
)

type TigrisUpdateAppKeyRequest struct {
	UpdateAppKeyRequest shared.UpdateAppKeyRequest `request:"mediaType=application/json"`
	// project name -  this is not allowed to update
	Project string `pathParam:"style=simple,explode=false,name=project"`
}

func (o *TigrisUpdateAppKeyRequest) GetUpdateAppKeyRequest() shared.UpdateAppKeyRequest {
	if o == nil {
		return shared.UpdateAppKeyRequest{}
	}
	return o.UpdateAppKeyRequest
}

func (o *TigrisUpdateAppKeyRequest) GetProject() string {
	if o == nil {
		return ""
	}
	return o.Project
}

type TigrisUpdateAppKeyResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Default error response
	Status *shared.Status
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	UpdateAppKeyResponse *shared.UpdateAppKeyResponse
}

func (o *TigrisUpdateAppKeyResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *TigrisUpdateAppKeyResponse) GetStatus() *shared.Status {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *TigrisUpdateAppKeyResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *TigrisUpdateAppKeyResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *TigrisUpdateAppKeyResponse) GetUpdateAppKeyResponse() *shared.UpdateAppKeyResponse {
	if o == nil {
		return nil
	}
	return o.UpdateAppKeyResponse
}
