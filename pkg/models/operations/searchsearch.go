// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/tigris-go-sdk/pkg/models/shared"
	"net/http"
)

type SearchSearchRequest struct {
	SearchIndexRequest shared.SearchIndexRequest `request:"mediaType=application/json"`
	// The index name to search documents from.
	Index string `pathParam:"style=simple,explode=false,name=index"`
	// Project name whose db is under target to search documents from.
	Project string `pathParam:"style=simple,explode=false,name=project"`
}

func (o *SearchSearchRequest) GetSearchIndexRequest() shared.SearchIndexRequest {
	if o == nil {
		return shared.SearchIndexRequest{}
	}
	return o.SearchIndexRequest
}

func (o *SearchSearchRequest) GetIndex() string {
	if o == nil {
		return ""
	}
	return o.Index
}

func (o *SearchSearchRequest) GetProject() string {
	if o == nil {
		return ""
	}
	return o.Project
}

type SearchSearchResponse struct {
	ContentType string
	// OK
	SearchIndexResponse *shared.SearchIndexResponse
	// Default error response
	Status      *shared.Status
	StatusCode  int
	RawResponse *http.Response
}

func (o *SearchSearchResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *SearchSearchResponse) GetSearchIndexResponse() *shared.SearchIndexResponse {
	if o == nil {
		return nil
	}
	return o.SearchIndexResponse
}

func (o *SearchSearchResponse) GetStatus() *shared.Status {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *SearchSearchResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *SearchSearchResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
