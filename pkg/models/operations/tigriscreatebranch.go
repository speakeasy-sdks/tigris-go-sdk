// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/tigris-go-sdk/pkg/models/shared"
	"net/http"
)

type TigrisCreateBranchRequest struct {
	CreateBranchRequest shared.CreateBranchRequest `request:"mediaType=application/json"`
	// Name of the database branch to be created. <p></p>**Note**: `main` is a reserved branch name for primary database and is automatically created with CreateProject
	Branch string `pathParam:"style=simple,explode=false,name=branch"`
	// Create a database branch in this project
	Project string `pathParam:"style=simple,explode=false,name=project"`
}

func (o *TigrisCreateBranchRequest) GetCreateBranchRequest() shared.CreateBranchRequest {
	if o == nil {
		return shared.CreateBranchRequest{}
	}
	return o.CreateBranchRequest
}

func (o *TigrisCreateBranchRequest) GetBranch() string {
	if o == nil {
		return ""
	}
	return o.Branch
}

func (o *TigrisCreateBranchRequest) GetProject() string {
	if o == nil {
		return ""
	}
	return o.Project
}

type TigrisCreateBranchResponse struct {
	ContentType string
	// OK
	CreateBranchResponse *shared.CreateBranchResponse
	// Default error response
	Status      *shared.Status
	StatusCode  int
	RawResponse *http.Response
}

func (o *TigrisCreateBranchResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *TigrisCreateBranchResponse) GetCreateBranchResponse() *shared.CreateBranchResponse {
	if o == nil {
		return nil
	}
	return o.CreateBranchResponse
}

func (o *TigrisCreateBranchResponse) GetStatus() *shared.Status {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *TigrisCreateBranchResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *TigrisCreateBranchResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
