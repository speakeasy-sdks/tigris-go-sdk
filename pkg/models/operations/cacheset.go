// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/tigris-go-sdk/pkg/models/shared"
	"net/http"
)

type CacheSetRequest struct {
	SetRequest shared.SetRequest `request:"mediaType=application/json"`
	// cache key
	Key string `pathParam:"style=simple,explode=false,name=key"`
	// cache name
	Name string `pathParam:"style=simple,explode=false,name=name"`
	// Tigris project name
	Project string `pathParam:"style=simple,explode=false,name=project"`
}

func (o *CacheSetRequest) GetSetRequest() shared.SetRequest {
	if o == nil {
		return shared.SetRequest{}
	}
	return o.SetRequest
}

func (o *CacheSetRequest) GetKey() string {
	if o == nil {
		return ""
	}
	return o.Key
}

func (o *CacheSetRequest) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CacheSetRequest) GetProject() string {
	if o == nil {
		return ""
	}
	return o.Project
}

type CacheSetResponse struct {
	ContentType string
	// OK
	SetResponse *shared.SetResponse
	// Default error response
	Status      *shared.Status
	StatusCode  int
	RawResponse *http.Response
}

func (o *CacheSetResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CacheSetResponse) GetSetResponse() *shared.SetResponse {
	if o == nil {
		return nil
	}
	return o.SetResponse
}

func (o *CacheSetResponse) GetStatus() *shared.Status {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *CacheSetResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CacheSetResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
