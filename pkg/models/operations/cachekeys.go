// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/tigris-go-sdk/pkg/models/shared"
	"net/http"
)

type CacheKeysRequest struct {
	// optional - count of keys to return a stream response line.
	Count *int64 `queryParam:"style=form,explode=true,name=count"`
	// optional - cursor - skip this argument if no cursor is associated
	Cursor *int64 `queryParam:"style=form,explode=true,name=cursor"`
	// cache name
	Name string `pathParam:"style=simple,explode=false,name=name"`
	// optional key pattern
	Pattern *string `queryParam:"style=form,explode=true,name=pattern"`
	// Tigris project name
	Project string `pathParam:"style=simple,explode=false,name=project"`
}

func (o *CacheKeysRequest) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *CacheKeysRequest) GetCursor() *int64 {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *CacheKeysRequest) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CacheKeysRequest) GetPattern() *string {
	if o == nil {
		return nil
	}
	return o.Pattern
}

func (o *CacheKeysRequest) GetProject() string {
	if o == nil {
		return ""
	}
	return o.Project
}

type CacheKeysResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// OK
	KeysResponse *shared.KeysResponse
	// Default error response
	Status *shared.Status
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *CacheKeysResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CacheKeysResponse) GetKeysResponse() *shared.KeysResponse {
	if o == nil {
		return nil
	}
	return o.KeysResponse
}

func (o *CacheKeysResponse) GetStatus() *shared.Status {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *CacheKeysResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CacheKeysResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
