// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type SearchIndexRequest struct {
	// A collation allows you to specify string comparison rules. Default is case-sensitive, to override it you can set this option to 'ci' that will apply to all the text fields in the filters.
	Collation *Collation `json:"collation,omitempty"`
	// Array of document field names to exclude from results. `include_fields`, if specified, takes precedence over `exclude_fields`.
	ExcludeFields []string `json:"exclude_fields,omitempty"`
	// Facet query to aggregate results on given fields. The field name for the facet search can be passed like this `{"brand": { "size": 10 }}` where the size controls the total facets for this field.
	Facet *string `json:"facet,omitempty"`
	// Filter stacks on top of query results to further narrow down the results. Similar to `ReadRequest.filter`
	Filter *string `json:"filter,omitempty"`
	// Array of document field names to include in results. By default, all fields are included.
	IncludeFields []string `json:"include_fields,omitempty"`
	// The index name to search documents from.
	Index *string `json:"index,omitempty"`
	// Optionally can specify the page to retrieve. If page is set then only hits for this page is returned
	Page *int `json:"page,omitempty"`
	// Optionally can set the number of hits to be returned per page, default is 20.
	PageSize *int `json:"page_size,omitempty"`
	// Project name whose db is under target to search documents from.
	Project *string `json:"project,omitempty"`
	// Query string for searching across text fields
	Q *string `json:"q,omitempty"`
	// Array of fields to project search query against
	SearchFields []string `json:"search_fields,omitempty"`
	// Array of fields and corresponding sort orders to order the results `[{ "salary": "$desc" }]`
	Sort *string `json:"sort,omitempty"`
}

func (o *SearchIndexRequest) GetCollation() *Collation {
	if o == nil {
		return nil
	}
	return o.Collation
}

func (o *SearchIndexRequest) GetExcludeFields() []string {
	if o == nil {
		return nil
	}
	return o.ExcludeFields
}

func (o *SearchIndexRequest) GetFacet() *string {
	if o == nil {
		return nil
	}
	return o.Facet
}

func (o *SearchIndexRequest) GetFilter() *string {
	if o == nil {
		return nil
	}
	return o.Filter
}

func (o *SearchIndexRequest) GetIncludeFields() []string {
	if o == nil {
		return nil
	}
	return o.IncludeFields
}

func (o *SearchIndexRequest) GetIndex() *string {
	if o == nil {
		return nil
	}
	return o.Index
}

func (o *SearchIndexRequest) GetPage() *int {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *SearchIndexRequest) GetPageSize() *int {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *SearchIndexRequest) GetProject() *string {
	if o == nil {
		return nil
	}
	return o.Project
}

func (o *SearchIndexRequest) GetQ() *string {
	if o == nil {
		return nil
	}
	return o.Q
}

func (o *SearchIndexRequest) GetSearchFields() []string {
	if o == nil {
		return nil
	}
	return o.SearchFields
}

func (o *SearchIndexRequest) GetSort() *string {
	if o == nil {
		return nil
	}
	return o.Sort
}
