// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type QueryTimeSeriesMetricsRequestFunctionEnum string

const (
	QueryTimeSeriesMetricsRequestFunctionEnumRate  QueryTimeSeriesMetricsRequestFunctionEnum = "RATE"
	QueryTimeSeriesMetricsRequestFunctionEnumCount QueryTimeSeriesMetricsRequestFunctionEnum = "COUNT"
	QueryTimeSeriesMetricsRequestFunctionEnumNone  QueryTimeSeriesMetricsRequestFunctionEnum = "NONE"
)

func (e QueryTimeSeriesMetricsRequestFunctionEnum) ToPointer() *QueryTimeSeriesMetricsRequestFunctionEnum {
	return &e
}

func (e *QueryTimeSeriesMetricsRequestFunctionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RATE":
		fallthrough
	case "COUNT":
		fallthrough
	case "NONE":
		*e = QueryTimeSeriesMetricsRequestFunctionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryTimeSeriesMetricsRequestFunctionEnum: %v", v)
	}
}

type QueryTimeSeriesMetricsRequestSpaceAggregationEnum string

const (
	QueryTimeSeriesMetricsRequestSpaceAggregationEnumAvg QueryTimeSeriesMetricsRequestSpaceAggregationEnum = "AVG"
	QueryTimeSeriesMetricsRequestSpaceAggregationEnumMin QueryTimeSeriesMetricsRequestSpaceAggregationEnum = "MIN"
	QueryTimeSeriesMetricsRequestSpaceAggregationEnumMax QueryTimeSeriesMetricsRequestSpaceAggregationEnum = "MAX"
	QueryTimeSeriesMetricsRequestSpaceAggregationEnumSum QueryTimeSeriesMetricsRequestSpaceAggregationEnum = "SUM"
)

func (e QueryTimeSeriesMetricsRequestSpaceAggregationEnum) ToPointer() *QueryTimeSeriesMetricsRequestSpaceAggregationEnum {
	return &e
}

func (e *QueryTimeSeriesMetricsRequestSpaceAggregationEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AVG":
		fallthrough
	case "MIN":
		fallthrough
	case "MAX":
		fallthrough
	case "SUM":
		*e = QueryTimeSeriesMetricsRequestSpaceAggregationEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryTimeSeriesMetricsRequestSpaceAggregationEnum: %v", v)
	}
}

type QueryTimeSeriesMetricsRequestTigrisOperationEnum string

const (
	QueryTimeSeriesMetricsRequestTigrisOperationEnumAll      QueryTimeSeriesMetricsRequestTigrisOperationEnum = "ALL"
	QueryTimeSeriesMetricsRequestTigrisOperationEnumRead     QueryTimeSeriesMetricsRequestTigrisOperationEnum = "READ"
	QueryTimeSeriesMetricsRequestTigrisOperationEnumWrite    QueryTimeSeriesMetricsRequestTigrisOperationEnum = "WRITE"
	QueryTimeSeriesMetricsRequestTigrisOperationEnumMetadata QueryTimeSeriesMetricsRequestTigrisOperationEnum = "METADATA"
)

func (e QueryTimeSeriesMetricsRequestTigrisOperationEnum) ToPointer() *QueryTimeSeriesMetricsRequestTigrisOperationEnum {
	return &e
}

func (e *QueryTimeSeriesMetricsRequestTigrisOperationEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ALL":
		fallthrough
	case "READ":
		fallthrough
	case "WRITE":
		fallthrough
	case "METADATA":
		*e = QueryTimeSeriesMetricsRequestTigrisOperationEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryTimeSeriesMetricsRequestTigrisOperationEnum: %v", v)
	}
}

// QueryTimeSeriesMetricsRequest - Requests the time series metrics
type QueryTimeSeriesMetricsRequest struct {
	AdditionalFunctions []AdditionalFunction                               `json:"additionalFunctions,omitempty"`
	Branch              *string                                            `json:"branch,omitempty"`
	Collection          *string                                            `json:"collection,omitempty"`
	Db                  *string                                            `json:"db,omitempty"`
	From                *int64                                             `json:"from,omitempty"`
	Function            *QueryTimeSeriesMetricsRequestFunctionEnum         `json:"function,omitempty"`
	MetricName          *string                                            `json:"metric_name,omitempty"`
	Quantile            *float32                                           `json:"quantile,omitempty"`
	SpaceAggregatedBy   []string                                           `json:"space_aggregated_by,omitempty"`
	SpaceAggregation    *QueryTimeSeriesMetricsRequestSpaceAggregationEnum `json:"space_aggregation,omitempty"`
	TigrisOperation     *QueryTimeSeriesMetricsRequestTigrisOperationEnum  `json:"tigris_operation,omitempty"`
	To                  *int64                                             `json:"to,omitempty"`
}
