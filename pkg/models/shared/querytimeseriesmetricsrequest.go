// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type QueryTimeSeriesMetricsRequestFunction string

const (
	QueryTimeSeriesMetricsRequestFunctionRate  QueryTimeSeriesMetricsRequestFunction = "RATE"
	QueryTimeSeriesMetricsRequestFunctionCount QueryTimeSeriesMetricsRequestFunction = "COUNT"
	QueryTimeSeriesMetricsRequestFunctionNone  QueryTimeSeriesMetricsRequestFunction = "NONE"
)

func (e QueryTimeSeriesMetricsRequestFunction) ToPointer() *QueryTimeSeriesMetricsRequestFunction {
	return &e
}

func (e *QueryTimeSeriesMetricsRequestFunction) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RATE":
		fallthrough
	case "COUNT":
		fallthrough
	case "NONE":
		*e = QueryTimeSeriesMetricsRequestFunction(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryTimeSeriesMetricsRequestFunction: %v", v)
	}
}

type QueryTimeSeriesMetricsRequestSpaceAggregation string

const (
	QueryTimeSeriesMetricsRequestSpaceAggregationAvg QueryTimeSeriesMetricsRequestSpaceAggregation = "AVG"
	QueryTimeSeriesMetricsRequestSpaceAggregationMin QueryTimeSeriesMetricsRequestSpaceAggregation = "MIN"
	QueryTimeSeriesMetricsRequestSpaceAggregationMax QueryTimeSeriesMetricsRequestSpaceAggregation = "MAX"
	QueryTimeSeriesMetricsRequestSpaceAggregationSum QueryTimeSeriesMetricsRequestSpaceAggregation = "SUM"
)

func (e QueryTimeSeriesMetricsRequestSpaceAggregation) ToPointer() *QueryTimeSeriesMetricsRequestSpaceAggregation {
	return &e
}

func (e *QueryTimeSeriesMetricsRequestSpaceAggregation) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AVG":
		fallthrough
	case "MIN":
		fallthrough
	case "MAX":
		fallthrough
	case "SUM":
		*e = QueryTimeSeriesMetricsRequestSpaceAggregation(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryTimeSeriesMetricsRequestSpaceAggregation: %v", v)
	}
}

type QueryTimeSeriesMetricsRequestTigrisOperation string

const (
	QueryTimeSeriesMetricsRequestTigrisOperationAll      QueryTimeSeriesMetricsRequestTigrisOperation = "ALL"
	QueryTimeSeriesMetricsRequestTigrisOperationRead     QueryTimeSeriesMetricsRequestTigrisOperation = "READ"
	QueryTimeSeriesMetricsRequestTigrisOperationWrite    QueryTimeSeriesMetricsRequestTigrisOperation = "WRITE"
	QueryTimeSeriesMetricsRequestTigrisOperationMetadata QueryTimeSeriesMetricsRequestTigrisOperation = "METADATA"
)

func (e QueryTimeSeriesMetricsRequestTigrisOperation) ToPointer() *QueryTimeSeriesMetricsRequestTigrisOperation {
	return &e
}

func (e *QueryTimeSeriesMetricsRequestTigrisOperation) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ALL":
		fallthrough
	case "READ":
		fallthrough
	case "WRITE":
		fallthrough
	case "METADATA":
		*e = QueryTimeSeriesMetricsRequestTigrisOperation(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryTimeSeriesMetricsRequestTigrisOperation: %v", v)
	}
}

// QueryTimeSeriesMetricsRequest - Requests the time series metrics
type QueryTimeSeriesMetricsRequest struct {
	AdditionalFunctions []AdditionalFunction                           `json:"additionalFunctions,omitempty"`
	Branch              *string                                        `json:"branch,omitempty"`
	Collection          *string                                        `json:"collection,omitempty"`
	Db                  *string                                        `json:"db,omitempty"`
	From                *int64                                         `json:"from,omitempty"`
	Function            *QueryTimeSeriesMetricsRequestFunction         `json:"function,omitempty"`
	MetricName          *string                                        `json:"metric_name,omitempty"`
	Quantile            *float32                                       `json:"quantile,omitempty"`
	SpaceAggregatedBy   []string                                       `json:"space_aggregated_by,omitempty"`
	SpaceAggregation    *QueryTimeSeriesMetricsRequestSpaceAggregation `json:"space_aggregation,omitempty"`
	TigrisOperation     *QueryTimeSeriesMetricsRequestTigrisOperation  `json:"tigris_operation,omitempty"`
	To                  *int64                                         `json:"to,omitempty"`
}
